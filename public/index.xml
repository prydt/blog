<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pry&#39;s blog</title>
    <link>https://blog.prydt.xyz/</link>
    <description>Recent content on pry&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Pranoy Dutta</copyright>
    <lastBuildDate>Tue, 16 Nov 2021 16:19:48 -0600</lastBuildDate><atom:link href="https://blog.prydt.xyz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kotlin for Data Structures Practice</title>
      <link>https://blog.prydt.xyz/posts/kotlin-for-data-structures-practice/</link>
      <pubDate>Tue, 16 Nov 2021 16:19:48 -0600</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/kotlin-for-data-structures-practice/</guid>
      <description>or Why Kotlin? The main difference between a computer scientist and a programmer is similar to the difference between an artist and a painter. A programmer merely writes programs, while a computer scientist creates art. This art is a subjective matter but I do find that each programmer has their own taste and one particular axis by which I measure the beauty of code is whether it uses the right abstractions and whether it is efficient without being sloppy.</description>
    </item>
    
    <item>
      <title>Asymptotic Complexity Explained</title>
      <link>https://blog.prydt.xyz/posts/asymptotic-complexity-explained/</link>
      <pubDate>Fri, 25 Jun 2021 22:47:43 -0500</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/asymptotic-complexity-explained/</guid>
      <description>“Simplicity is a great virtue but it requires hard work to achieve it and education to appreciate it. And to make matters worse: complexity sells better.”
&amp;ndash; Edsger W. Dijkstra
 Ever wondered what asymptotic complexity or Big-\(\mathcal{O}\) notation are or what they mean mathematically? This post will explain asymptotic complexity without handwaving as much of the math. This post is meant for someone who has heard of Big-O but doesn&amp;rsquo;t know exactly what it means.</description>
    </item>
    
    <item>
      <title>Programming Language Opinions</title>
      <link>https://blog.prydt.xyz/posts/programming-language-opinions/</link>
      <pubDate>Tue, 22 Jun 2021 21:10:18 -0500</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/programming-language-opinions/</guid>
      <description>Programming languages to hackers are tools and many craftspeople take great pride in their tools of choice. Tools often come with trade offs and the most skilled craftspeople know precisely when to use a tool and perhaps most importantly, when not to.
 Each language has its purpose, however humble. Each language expresses the Yin and Yang of software. Each language has its place within the Tao.
But do not program in COBOL if you can avoid it.</description>
    </item>
    
    <item>
      <title>Revamping my Blog!</title>
      <link>https://blog.prydt.xyz/posts/my-first-post/</link>
      <pubDate>Tue, 25 May 2021 15:36:28 -0500</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/my-first-post/</guid>
      <description>My First Post (on Hugo)! HEY!! Welcome to my blog. My current blog set up uses hugo and the amazing cactus theme! The RSS feed is here!
My set up is simple and should encourage me to write more than worrying about setting up the blog.</description>
    </item>
    
    <item>
      <title>Our Technology Dystopia and How to Survive in It</title>
      <link>https://blog.prydt.xyz/posts/our-technology-dystopia-and-how-to-survive-in-it/</link>
      <pubDate>Tue, 26 Jan 2021 15:55:51 -0500</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/our-technology-dystopia-and-how-to-survive-in-it/</guid>
      <description>We are living in a dystopia. A dystopia without the neon lights and synth-heavy soundtracks that we are used to seeing in movies but a dystopia that is no less dangerous and despotic. A bold claim, I know, but it is an increasingly accurate and justified description of our world today.</description>
    </item>
    
    <item>
      <title>Finding Trott Constants</title>
      <link>https://blog.prydt.xyz/posts/finding-trott-constants/</link>
      <pubDate>Sat, 18 Jul 2020 15:52:28 -0500</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/finding-trott-constants/</guid>
      <description>My work in finding possible Trott constants.</description>
    </item>
    
    <item>
      <title>Breakfast of Champions Review</title>
      <link>https://blog.prydt.xyz/posts/breakfast-of-champions-review/</link>
      <pubDate>Sun, 12 Jul 2020 15:49:53 -0500</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/breakfast-of-champions-review/</guid>
      <description>An interesting novel on race and conflict in America still relevant today.</description>
    </item>
    
    <item>
      <title>Installing Riscv Spike Simulator</title>
      <link>https://blog.prydt.xyz/posts/installing-riscv-spike-simulator/</link>
      <pubDate>Tue, 16 Jun 2020 15:45:34 -0500</pubDate>
      
      <guid>https://blog.prydt.xyz/posts/installing-riscv-spike-simulator/</guid>
      <description>Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.
Dependencies:
 Device Tree Compiler  # Arch Linux sudo pacman -S dtc # Ubuntu / Debian sudo apt install device-tree-compiler Installing Spike
Make a new directory for Spike
mkdir RISCV cd RISCV Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itself
git clone --recursive https://github.com/riscv/riscv-gnu-toolchain git clone https://github.</description>
    </item>
    
  </channel>
</rss>
